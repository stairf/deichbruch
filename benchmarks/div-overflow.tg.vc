/*****
 * Copyright (c) 2021, Stefan Reif
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 *****/

/*
 * div-overflow.tg.vc
 */
#include "common.h"

static void step(void)
{
	TYPE r0, r1, r2, r3, r4, r5, r6, r7, r8, r9;
	int o = 0;

	start();
	o ^= o_div(P0(0), P1(0), &r0);
	o ^= o_div(P0(1), P1(0), &r1);
	o ^= o_div(P0(2), P1(0), &r2);
	o ^= o_div(P0(MAX), P1(0), &r3);
	o ^= o_div(P0(MAX-1), P1(0), &r4);
	o ^= o_div(P0(MAX/2), P1(0), &r5);
#if (SIGNED) && IS_2_COMPLEMENT
	o ^= o_div(P0(MIN), P1(-1), &r6);
#else
	o ^= o_div(P0(127),P1(0), &r6);
#endif
	o ^= o_div(P0(MIN), P1(0), &r7);
	o ^= o_div(P0(MIN+1), P1(0), &r8);
	o ^= o_div(P0(MIN/2+1), P1(0), &r9);

	end();

	effect(o);

}

